name: Periodic Job

on:
  push:
    branches: [ master ]
  schedule:
    - cron: "*/30 * * * *"

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: "yarn"
    # Setup javascript package caches
    # https://github.com/actions/cache/blob/master/examples.md#node---yarn
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
    - name: Generate site
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BUILDKITE_TOKEN: ${{ secrets.BUILDKITE_TOKEN }}
        # To prevent gatsby build run out of memory
        GATSBY_CPU_COUNT: "1"
        NODE_OPTIONS: "--max-old-space-size=5120"
      run: |
        make site
    - name: Upload site
      run: |
        aws s3 cp --recursive js/public s3://ray-travis-site
        aws s3 cp results.db s3://ray-travis-site/tmp/flaky_dbs/latest.db
        aws s3 cp results.db s3://ray-travis-site/tmp/flaky_dbs/snapshot_$(date +"%s").db
    - name: Post slack notification
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      run: |
        python slack_fail_runner.py
    - name: Run slow test stats
      run: |
        cat sql/slow_tests.sql | sqlite3 results.db
    - name: Catch Failures
      if: ${{ failure() }}
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      run: |
        python failure_notifier.py
